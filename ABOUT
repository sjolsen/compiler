The source tree is structured as follows; except where otherwise
specified, files in the 'src' directory simply define the components
declared in the corresponding file in the 'include' directory. Only
those constructs intended for use outside the module are listed:

.
├── include
│   ├── ast
│   │   ├── astdef.hh           - Defines the basis of the AST
│   │   │                         library
│   │   │
│   │   ├── ast_nodes.hh        - Defines specialized node types and
│   │   │                         functions for populating tables
│   │   │                         from grammatical constructs
│   │   │
│   │   ├── astprint.hh         - Tools for printing ASTs as nested
│   │   │                         s-expressions
│   │   │
│   │   ├── ast_predicates.hh   - Predicates for parsing a stream of
│   │   │                         tokens into an AST
│   │   │
│   │   ├── auto.astdecls.hh    - Defines generic nodes representing
│   │   │                         production rules in the mC grammar;
│   │   │                         automatically generated by
│   │   │                         'src/ast/astgen.lisp'
│   │   │
│   │   └── symbol_table.hh     - Definitions for the symbol table
│   │                             and its entries
│   │
│   ├── ast.hh                  - Header for the abstract syntax tree
│   │                             library
│   │
│   ├── semantic.hh             - Header for semantic analysis tools
│   │
│   ├── text_processing
│   │   ├── char_range.hh       - Interface for manipulating ranges
│   │   │                         over a std::string
│   │   │
│   │   └── file_position.hh    - Data type that stores a position
│   │                             in a std::string suitable for use
│   │                             with line-based text
│   │
│   ├── text_processing.hh      - Header for the text processing
│   │                             library
│   │
│   ├── tokenizer
│   │   ├── error.hh
│   │   ├── tokendef.hh         - Basic token definitions
│   │   │
│   │   ├── token_extraction.hh - Functionality for tokenizing input
│   │   │
│   │   ├── token_predicates.hh - Predicates for performing syntax
│   │   │                         matching
│   │   │
│   │   └── token_range.hh      - Interface for manipulating ranges
│   │                             over a std::vector <token>
│   │
│   └── tokenizer.hh            - Header for the tokenizer library
│
└── src
    ├── ast
    │   ├── astdef.cc
    │   ├── astgen.lisp         - Common Lisp program providing
    │   │                         functions for generating generic
    │   │                         AST node types
    │   │
    │   ├── ast_nodes.cc
    │   ├── ast_pos.cc          - Functions returning the position
    │   │                         of AST nodes in source files
    │   ├── ast_predicates.cc
    │   ├── astprint.cc
    │   ├── auto.astdefs.cc
    │   └── symbol_table.cc
    ├── mcc.cc
    ├── semantic.cc
    ├── text_processing
    │   ├── char_range.cc
    │   └── file_position.cc
    └── tokenizer
        ├── error.cc
        ├── tokendef.cc
        ├── token_extraction.cc
        ├── token_predicates.cc
        └── token_range.cc
